{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"d82ecad5-4bf5-5620-8bf2-81f6b7a4e62f","excerpt":"MFA 설정을 할 이유가 있을까? 보통 엔터프라이즈의 경우 와 끼리 전용회선 혹은 Site to Site VPN 으로 내부망에서 접근이 가능하지만, 소규모의 회사는 어쩔 수 없이 Bastion를 외부에서 접근 하도록 한다면 OTP 설정이 필요해 보인다. 당연, 외부에서 접근하도록 하여도 의 를 했겠지만.. 그리고 Bastion는 보통 서버 접근 용도 혹은 DB 접근 용도의  역활도 하기 때문에 접근제어 솔루션이 없을 경우 2차 인증을 통해 보안 강화 할 수 있다. 1. Google OTP 설치 1-1. EC2에 Google OTP 설치하기 위해서는  를 인스톨 해야합니다. EPEL(Extra Packages for Enterprise Linux) 아마존 리눅스에 추가 패키지 제공하는 저장소 1-2. 저장소 설치가 완료되었다면 를 설치 합니다. 2. MFA Code 생성 및 설정 2-1. MFA등록를 위해서는 아래 명령어를 통해 MFA설정 할 수 있다. MFA는 되며 마다 다른가 설…","fields":{"slug":"/tech/otp/"},"frontmatter":{"categories":"Tech","title":"Amazon EC2에 Google Authenticator MFA 설정하기","date":"August 29, 2023"}},"next":{"fields":{"slug":"/aws/aws_index/"}},"previous":null},{"node":{"id":"adf6370b-2502-5c74-bded-9c1dbad0be79","excerpt":"해당 문서에 설치 방법은 “Redhat 8.4”버전에서 진행하였습니다. 관련 Document https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/install-nvidia-driver.html https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/optimize_gpu.html G타입은 인스턴스 생성하기 전 vCPU 리밋해제가 필요하다. M,C등 타입과 다르게 Service Quotas에서 Running On-Demand G and VT instances 리밋 해제 g4dn 인스턴스 타입은 서울 리전 가용 영역 중 ap-northeast-2b  의 경우 간혹 인스턴스 생성이 안되는 경우가 있다고 한다. (시도하다보면 자리나서 생성 가능하다고 함) 보통의 경우 그래픽 드라이버가 설치 된 AMI 이미지 사용하면 되지만 요구사항으로 인해 특정 버전만 사용하는 경우 수동 설치 해야함 1.…","fields":{"slug":"/aws/aws_index/"},"frontmatter":{"categories":"AWS","title":"AWS EC2 인스턴스에 Nvidia Driver 설치하기","date":"August 27, 2023"}},"next":{"fields":{"slug":"/tech/steampipe/"}},"previous":{"fields":{"slug":"/tech/otp/"}}},{"node":{"id":"7410b51b-0558-5a5a-9ce9-22c363995ee2","excerpt":"1. Steampipe? Steampipe는 클라우드 리소스들을  형태로 조회 할 수 있고 Steampipe도 마찬가지로 여러 CSP 서비스들(AWS,GCP,Azure 등)에서도 사용이 가능하다. Steampipe는  형태로 메시지를 각 을 이용해 클라우드와 통신을 하기에 속도가 빠른 장점이 있다!  2. 일단 사용해보자! 직접 Query문를 실행해보고 경험하지 않으면 자세히 모르니 일단 설치하고 실행해보자!! 2-1. Steampipe 설치 Steampipe Install Docs : https://steampipe.io/downloads 2-2. Linux OS 환경의 Install Steampipe Install Steampipe AWS Plugin Install 2-3. AWS Configure 설정 사용하기 전에  설정을 하자 사용할 IAM Key는 ReadOnlyAccess Policy를 가지고 있는 Key를 사용하자! 2-4. Query 해보기 생성한 를 가져와보자! …","fields":{"slug":"/tech/steampipe/"},"frontmatter":{"categories":"Tech","title":"AWS Resource Management \"Steampipe\" Tool 활용하기","date":"August 26, 2023"}},"next":{"fields":{"slug":"/terraform/index_04/"}},"previous":{"fields":{"slug":"/aws/aws_index/"}}},{"node":{"id":"4911b009-1a56-50d1-b1c0-2f170d3ecc3b","excerpt":"Terraform 앞으로 우리가 Terraform으로 만들 인프라 아키텍처를 참고해서 코드로 구현하는 걸 목표!!!\n 또 한, Terraform AWS Resource Document를 활용하여 resource에 포함된 옵션들을 살펴보자!\n(앞으로 이 Document랑 친해져야합니다..) https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources  3-0. 디렉토리 생성  디렉토리 밑에  디렉토리를 만들 후  파일을 만듭니다!  3-1. Provider.tf 설정 리소스를 생성하기 위해서는 IAM Key가 필요하다.\nTerraform에서는 Key를  파일에 하는 방법도 있다. 위에서 만든  디렉토리 아래  파일을 만들어서 Key를 넣어주자 3-2. VPC 생성 VPC에 생성에 필요한 소스는 아래 Terraform  document 에서 볼 수 있다. https://registry.terraform.io/p…","fields":{"slug":"/terraform/index_04/"},"frontmatter":{"categories":"terraform","title":"03. Terraform - AWS VPC, Subnet 생성","date":"August 25, 2023"}},"next":{"fields":{"slug":"/terraform/index_03/"}},"previous":{"fields":{"slug":"/tech/steampipe/"}}},{"node":{"id":"1cf04fc8-3b70-5978-a9bc-e552e932798c","excerpt":"구성 전에.. Terraform를 사용하기전에 개발환경부터 구축해야한다.\n보통 로컬PC에 구성해서 사용하지만, 본인은 를 활용해서 개발서버(?)를 구성했다.\n, 의 유출 방지 및 코드 저장용으로 사용하고 있다! Cloud9도 EC2이기 때문에 Role부여해서 key를 하드코딩하지 않고 사용 할 수 있다! 앞으로는  기준으로 작성하려고 한다! AWS Cloud9란?\nAWS 서비스로 제공되는 Web IDE이다. 기본적으로 AWS CLI, Python, Node.js 등의 개발언어가 기본제공(?)된다. AWS Cloud9 소개 : https://aws.amazon.com/ko/cloud9/ 2-0. AWS Cloud9 구축 2-1. AWS Cloud9 구축하기 AWS Console에 Login 후에  검색하고 서비스에 들어간다.   서비스에 접근하면 오른쪽  클릭하자  환경의 이름과 설명을 넣어주는데 내가 원하는대로 넣어준 후   다음으로 넘어가게 된다면 가 나오는데 아래와 같이 셋팅하…","fields":{"slug":"/terraform/index_03/"},"frontmatter":{"categories":"terraform","title":"02. Terraform - 개발환경 구축하기","date":"August 25, 2023"}},"next":{"fields":{"slug":"/tech/restapi_02/"}},"previous":{"fields":{"slug":"/terraform/index_04/"}}},{"node":{"id":"90973f5e-fa71-55b5-a2b7-c7659a2465c7","excerpt":"01. My IP API 구현해보기 01. Flask를 활용한 Rest API[GET] 구현해보기_01편 전 편에서 우리는 를 실행해봤다.\n지금까지는 그냥 Web 이랑 뭐가다르지? 싶을 수 있다. - 예제 Code HelloWorld는 Root으로 두고 를 만들어보자 - 결과  02. route 옵션  옵션에 절대 경로 처럼 줄 수 있지만,  외에는 어떻게 처리할까? 아래 코드처럼 를 사용하면 설정한 라우팅 경로외에 임의로 넣을 시 메시지를 넣어 리턴 해줄 수 있다! - 결과  를 넣어서 json 형태로 주는 것도 가능하다! - 결과  01. My IP API 구현해보기 - 예제 Code - 결과 02. route 옵션 - 결과 - 결과","fields":{"slug":"/tech/restapi_02/"},"frontmatter":{"categories":"Tech","title":"02. Flask를 활용한 Rest API[GET] 구현해보기_02편","date":"August 25, 2023"}},"next":{"fields":{"slug":"/terraform/index_02/"}},"previous":{"fields":{"slug":"/terraform/index_03/"}}},{"node":{"id":"331acba5-223f-542e-900d-3395aa6b8d0a","excerpt":"Terraform 동작하는 과정 Terraform은 사용자가 작성한 코드를 각 CSP(Cloud Solution Provide)들의 API가 읽을 수 있도록 변환하고 코드에 이상이 없는지 계획를 실행하고 실제 사용자 계정에 인프라를 적용을 한다. 여기서 중요한 점은 API에 접근 할 수 있는지가 중요하다. 간혹 Terraform개발 서버(?)를 Cloud Private 환경에 구성했을 경우 Init과정이 되지 않는다. (Plan과 Apply는 된다) - Flow    코드를 작성**(Write)하고 terraform이 디렉토리를 보고 초기화(Init)하고 계획을 실행(Plan)하고 인프라 적용(Apply)**한다. 1-1. Write(작성) 실제 프로비저닝 하기 위해서는 코드 작성이 필요하고 Terraform의 특징으로는 Yaml과 같이 와  형태라서 작성하기 편하다. 아래 코드만 봐도 와  형태로 이루어져 있어서 한눈에 알아볼수 있다. (사실 module, variable, lo…","fields":{"slug":"/terraform/index_02/"},"frontmatter":{"categories":"terraform","title":"01. Terraform - 동작 과정","date":"August 25, 2023"}},"next":{"fields":{"slug":"/tech/restapi_01/"}},"previous":{"fields":{"slug":"/tech/restapi_02/"}}},{"node":{"id":"0fd46287-5fa6-5462-bf83-12a8bfd7e2e3","excerpt":"01. Flask란?  Flask는 Python를 기반하고 있는  다.\n정말 간단한 코드로 쉽게 Web 또는 API Server 구성할 수 있다. 02. (또) HelloWorld 구현하기 - Flask 라이브러리 설치 우선  라이브러리를 설치해야한다.\n아래 명령어로 설치해보자! - Code 작성하기 원하는 디렉토리 안에  파일을 생성하여 아래 코드를 넣고 저장한다. - 실행하기 만든 파일을 python으로 실행하면 아래와 같이 메시지가 발생한다.  - 접근하기 테스트 접근은 을 통해 접근하게 되면  보여지게 된다.  03. Code 뿌셔보기 우리가 예제코드를 가지고 위에서 까지 구현해봤다. - @app.route(’/‘) 우리가 작성하면서  코드를 넣었는데 이 코드가 를 뜻하는 것이다. 접근할때  주소로 접근했지만  에 접근하려면 코드는 아래과 같다. - 결과  01. Flask란? 02. (또) HelloWorld 구현하기 - Flask 라이브러리 설치 - Code 작성하기 -…","fields":{"slug":"/tech/restapi_01/"},"frontmatter":{"categories":"Tech","title":"01. Flask를 활용한 Rest API[GET] 구현해보기_01편","date":"August 25, 2023"}},"next":{"fields":{"slug":"/terraform/index_01/"}},"previous":{"fields":{"slug":"/terraform/index_02/"}}},{"node":{"id":"b9e488eb-8824-5b01-8132-70f80a75d645","excerpt":"테라폼이 먼데이 테라폼을 만났을때  내가 AWS SA 포지션으로 입사한지 얼마 안되었을때 Terraform를 알게 되었다.\n코드로 인프라를 관리한다고 하더라.. 근데 본인은 코드(Code)와 친한 편이 아니라 간편하게 UI에서 “클릭”으로 만드는게 더 쉬웠고,\n사실 AWS UI,CLI 등 일단 있는거 부터 잘 다뤄야 코드로 표현해서 구축 하는게 맞다고 봤다..\n(사실 어려워서 배우기 힘들었던건 비밀..) 정의 테라폼이란 IaC(Infrastructure as Code)로 코드로 인프라를 관리하고 프로비저닝한다고 한다.\nAWS뿐만이 아니라 GCP,Azure,Kubenetes 등 여러 인프라를 코드로 구축 할 수 있다. 우리가 EC2를 만들기 위해 VPC, Subnet, IGW, NAT Gateway, Security Groups 등등 클릭하면서 설정해야하는 방면 Terraform에서는 간단한 코드로 배포 할 수 있다. 예제코드 (VPC 생성) Terraform Code로 배포 “만”…","fields":{"slug":"/terraform/index_01/"},"frontmatter":{"categories":"terraform","title":"00. 테라폼(Terraform)이 뭔데?","date":"August 25, 2023"}},"next":{"fields":{"slug":"/tech/restapi_00/"}},"previous":{"fields":{"slug":"/tech/restapi_01/"}}},{"node":{"id":"a5b9bacc-d7ab-50f7-a0c6-2490a2f8e24a","excerpt":"00. API란? API는 인터페이스를 통해 다양한 플랫폼과 연결을 해주는 것 누군가 API가 뭐야? 라고 물어보면 정말 대답하기 힘든거 같다.\n명확하게 누군가 API의 대해 알려줬으면 좋겠다.. API는 여러가지 API가 있지만 그 중 보편적으로 사용 할 Rest API에 대해 알아보려고 한다. 01. Rest API (Representational State Transfer API) - Rest API의 형태 Rest API는 4가지의 메소드를 가지고 구축한다.( , , , ) GET : Create POST : Read PUT : Update DELETE : Delete - 각 상태에 따른 응답코드 200 : GET 등의 Client 요청을 정상적으로 수행되었을때 발생하는 코드 201 : POST 작업 수행 시 정상적으로 생성되었을때 발생하는 코드 02. 참고자료 https://aws.amazon.com/ko/what-is/restful-api/ 00. API란? 01. Re…","fields":{"slug":"/tech/restapi_00/"},"frontmatter":{"categories":"Tech","title":"00. 다들 API라고 하는데 API는 뭘까?","date":"August 25, 2023"}},"next":{"fields":{"slug":"/reinvent/"}},"previous":{"fields":{"slug":"/terraform/index_01/"}}},{"node":{"id":"17722658-1217-5011-acd0-7f4597474ca3","excerpt":"- 우연히 소속되어 있는 회사에서  2022에 가게 되었습니다\n너~~~무 늦은 감은 있지만 후기를 작성해보고자 합니다!! 출발 우리 비행기는 한국에서 LA를 경우해서 라스베가스로 가는 비행이였고..\n비행기 시간만 12시간이였나 14시간 소요되어서 엉덩이에 뿔이 날뻔했다..  라스베가스 도착 LA에서 입국심사를 마치고 국내선으로 갈아탄 후 라스베가스에 도착했다.\n(입국심사때 뭐이리 질문을 많이 하는지.. 떨리기도 했다..)  숙소 숙소는 MGM이라는 호텔에 숙박하였고 호텔의 규모가 우리나라 호텔에 비교할 수 없이 엄~~청 컸다…\n(로비에서 숙소가 있는 층에 도착한 후 방까지 코엑스 규모..)  뱃지 픽업 뱃지 픽업은 각 주요 호텔에 픽업 할 수가 있어서 좋았지만, 무조건 메인 호텔로 가서 받는게 훨신 구경거리가 많으니 꼭! 메인호텔(키노트 장소호텔)로 가도록 하자!   이곳이 메인호텔의 뱃지픽업장소!\n뱃지픽업뿐만이 아니라 SWAG 수령 또는 코엑스랑 가까운게 장점이고 작은 이벤트들이…","fields":{"slug":"/reinvent/"},"frontmatter":{"categories":"일상","title":"AWS Re:invent 2022 후기.","date":"August 25, 2023"}},"next":null,"previous":{"fields":{"slug":"/tech/restapi_00/"}}}],"categories":["All","Tech","AWS","terraform","일상"]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}