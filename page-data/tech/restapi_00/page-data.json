{"componentChunkName":"component---src-templates-blog-template-js","path":"/tech/restapi_00/","result":{"data":{"cur":{"id":"a5b9bacc-d7ab-50f7-a0c6-2490a2f8e24a","html":"<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/897fb852-12c0-4907-88df-9f21801f875f/image.png\" alt=\"\"></p>\n<h2 id=\"00-api란\" style=\"position:relative;\"><a href=\"#00-api%EB%9E%80\" aria-label=\"00 api란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>00. API란?</h2>\n<blockquote>\n<p>API는 인터페이스를 통해 다양한 플랫폼과 연결을 해주는 것</p>\n</blockquote>\n<p><del>누군가 API가 뭐야? 라고 물어보면 정말 대답하기 힘든거 같다.\n명확하게 누군가 API의 대해 알려줬으면 좋겠다..</del></p>\n<p>API는 여러가지 API가 있지만 그 중 보편적으로 사용 할 Rest API에 대해 알아보려고 한다.</p>\n<hr>\n<h2 id=\"01-rest-api-representational-state-transfer-api\" style=\"position:relative;\"><a href=\"#01-rest-api-representational-state-transfer-api\" aria-label=\"01 rest api representational state transfer api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. Rest API (Representational State Transfer API)</h2>\n<h3 id=\"--rest-api의-형태\" style=\"position:relative;\"><a href=\"#--rest-api%EC%9D%98-%ED%98%95%ED%83%9C\" aria-label=\"  rest api의 형태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Rest API의 형태</h3>\n<p>Rest API는 4가지의 메소드를 가지고 구축한다.( <code class=\"language-text\">GET</code>, <code class=\"language-text\">POST</code>, <code class=\"language-text\">PUT</code>, <code class=\"language-text\">DELETE</code>)</p>\n<ul>\n<li>GET : Create</li>\n<li>POST : Read</li>\n<li>PUT : Update</li>\n<li>DELETE : Delete</li>\n</ul>\n<h3 id=\"--각-상태에-따른-응답코드\" style=\"position:relative;\"><a href=\"#--%EA%B0%81-%EC%83%81%ED%83%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EC%9D%91%EB%8B%B5%EC%BD%94%EB%93%9C\" aria-label=\"  각 상태에 따른 응답코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 각 상태에 따른 응답코드</h3>\n<ul>\n<li>200 : GET 등의 Client 요청을 정상적으로 수행되었을때 발생하는 코드</li>\n<li>201 : POST 작업 수행 시 정상적으로 생성되었을때 발생하는 코드</li>\n</ul>\n<h2 id=\"02-참고자료\" style=\"position:relative;\"><a href=\"#02-%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"02 참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. 참고자료</h2>\n<p><a href=\"https://aws.amazon.com/ko/what-is/restful-api/\">https://aws.amazon.com/ko/what-is/restful-api/</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#00-api%EB%9E%80\">00. API란?</a></p>\n</li>\n<li>\n<p><a href=\"#01-rest-api-representational-state-transfer-api\">01. Rest API (Representational State Transfer API)</a></p>\n<ul>\n<li><a href=\"#--rest-api%EC%9D%98-%ED%98%95%ED%83%9C\">- Rest API의 형태</a></li>\n<li><a href=\"#--%EA%B0%81-%EC%83%81%ED%83%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EC%9D%91%EB%8B%B5%EC%BD%94%EB%93%9C\">- 각 상태에 따른 응답코드</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#02-%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\">02. 참고자료</a></p>\n</li>\n</ul>\n</div>","excerpt":"00. API란? API는 인터페이스를 통해 다양한 플랫폼과 연결을 해주는 것 누군가 API가 뭐야? 라고 물어보면 정말 대답하기 힘든거 같다.\n명확하게 누군가 API의 대해 알려줬으면 좋겠다.. API는 여러가지 API가 있지만 그 중 보편적으로 사용 할 Rest API에 대해 알아보려고 한다. 01. Rest API (Representational State Transfer API) - Rest API의 형태 Rest API는 4가지의 메소드를 가지고 구축한다.( , , , ) GET : Create POST : Read PUT : Update DELETE : Delete - 각 상태에 따른 응답코드 200 : GET 등의 Client 요청을 정상적으로 수행되었을때 발생하는 코드 201 : POST 작업 수행 시 정상적으로 생성되었을때 발생하는 코드 02. 참고자료 https://aws.amazon.com/ko/what-is/restful-api/ 00. API란? 01. Re…","frontmatter":{"date":"August 25, 2023","title":"00. 다들 API라고 하는데 API는 뭘까?","categories":"Tech","author":"정욱현","emoji":"😀"},"fields":{"slug":"/tech/restapi_00/"}},"next":null,"prev":{"id":"b9e488eb-8824-5b01-8132-70f80a75d645","html":"<h2 id=\"테라폼이-먼데이\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%B4-%EB%A8%BC%EB%8D%B0%EC%9D%B4\" aria-label=\"테라폼이 먼데이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테라폼이 먼데이</h2>\n<h3 id=\"테라폼을-만났을때\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%84-%EB%A7%8C%EB%82%AC%EC%9D%84%EB%95%8C\" aria-label=\"테라폼을 만났을때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테라폼을 만났을때</h3>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/2882317b-5e80-47cf-8e9e-d984da1194f9/image.gif\" alt=\"\"></p>\n<p>내가 AWS SA 포지션으로 입사한지 얼마 안되었을때 Terraform를 알게 되었다.\n코드로 인프라를 관리한다고 하더라..</p>\n<p>근데 본인은 코드(Code)와 친한 편이 아니라 간편하게 UI에서 “클릭”으로 만드는게 더 쉬웠고,\n사실 AWS UI,CLI 등 일단 있는거 부터 잘 다뤄야 코드로 표현해서 구축 하는게 맞다고 봤다..\n<del>(사실 어려워서 배우기 힘들었던건 비밀..)</del></p>\n<h3 id=\"정의\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%9D%98\" aria-label=\"정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정의</h3>\n<p>테라폼이란 IaC(Infrastructure as Code)로 코드로 인프라를 관리하고 프로비저닝한다고 한다.\nAWS뿐만이 아니라 GCP,Azure,Kubenetes 등 여러 인프라를 코드로 구축 할 수 있다.</p>\n<p>우리가 EC2를 만들기 위해 VPC, Subnet, IGW, NAT Gateway, Security Groups 등등 클릭하면서 설정해야하는 방면 Terraform에서는 간단한 코드로 배포 할 수 있다.</p>\n<p>예제코드 (VPC 생성)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">resource <span class=\"token string\">\"aws_vpc\"</span> <span class=\"token string\">\"vpc\"</span> <span class=\"token punctuation\">{</span>\n\tcidr_block <span class=\"token operator\">=</span> <span class=\"token string\">\"10.0.0.0/16\"</span>\n\tenable_dns_hostnames <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n\ttags <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    \tName <span class=\"token operator\">=</span> vpc\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Terraform Code로 배포 “만” 하고 끝나는 것이 아닌 똑같은 코드로 재활용 및 운영이 가능하다.\n만약 SA가 다른 프로젝트로 투입하게 된다면 기본적인 구조의 코드를 들고 다닌다면 언제든지 코드 재활용해서 쉽게 배포 할 수 있는 장점이 있다.</p>\n<h3 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목표</h3>\n<p>Terraform Code로 AWS를 간단하게 구축 할 수 있는 가이드 문서를 만드려고 한다.</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/8af64f68-6466-4b60-987c-f1c98c0a3b4e/image.gif\" alt=\"\">\n<del>아무튼.. 만들고 동작하니까 괜찮지 않을까..?</del></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%B4-%EB%A8%BC%EB%8D%B0%EC%9D%B4\">테라폼이 먼데이</a></p>\n<ul>\n<li><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%84-%EB%A7%8C%EB%82%AC%EC%9D%84%EB%95%8C\">테라폼을 만났을때</a></li>\n<li><a href=\"#%EC%A0%95%EC%9D%98\">정의</a></li>\n<li><a href=\"#%EB%AA%A9%ED%91%9C\">목표</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 25, 2023","title":"00. 테라폼(Terraform)이 뭔데?","categories":"terraform","author":"정욱현","emoji":"😀"},"fields":{"slug":"/terraform/index_01/"}},"site":{"siteMetadata":{"siteUrl":"https://loafer-wock.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/tech/restapi_00/","nextSlug":"","prevSlug":"/terraform/index_01/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}