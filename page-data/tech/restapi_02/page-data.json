{"componentChunkName":"component---src-templates-blog-template-js","path":"/tech/restapi_02/","result":{"data":{"cur":{"id":"90973f5e-fa71-55b5-a2b7-c7659a2465c7","html":"<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/a007f632-fe41-480b-ba28-a12e208d6571/image.png\" alt=\"\"></p>\n<h2 id=\"01-my-ip-api-구현해보기\" style=\"position:relative;\"><a href=\"#01-my-ip-api-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"01 my ip api 구현해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. My IP API 구현해보기</h2>\n<blockquote>\n<p><a href=\"https://velog.io/@jtret2424/01.-Rest-API-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EA%B8%B0-bhoxpa39\">01. Flask를 활용한 Rest API[GET] 구현해보기_01편</a></p>\n</blockquote>\n<p>전 편에서 우리는 <code class=\"language-text\">HelloWorld!</code>를 실행해봤다.\n지금까지는 그냥 Web 이랑 뭐가다르지? 싶을 수 있다.</p>\n<h3 id=\"--예제-code\" style=\"position:relative;\"><a href=\"#--%EC%98%88%EC%A0%9C-code\" aria-label=\"  예제 code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 예제 Code</h3>\n<p>HelloWorld는 Root으로 두고 <code class=\"language-text\">/myip</code>를 만들어보자</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">from flask import Flask\nfrom flask import request\nfrom flask import jsonify\n\napp = Flask (__name__)\n\n@app.route('/')\ndef helloworld():\n\treturn 'Hello World!'\n    \n@app.route(\"/myip\")\ndef myip():\n    return jsonify({'ip': request.remote_addr})\n\nif __name__==\"__main__\":\n\tapp.run()</code></pre></div>\n<h3 id=\"--결과\" style=\"position:relative;\"><a href=\"#--%EA%B2%B0%EA%B3%BC\" aria-label=\"  결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 결과</h3>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/6b178e8d-e3e1-4c7b-9541-29b84c8e3325/image.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"02-route-옵션\" style=\"position:relative;\"><a href=\"#02-route-%EC%98%B5%EC%85%98\" aria-label=\"02 route 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. route 옵션</h2>\n<p><code class=\"language-text\">@app.route('/')</code> 옵션에 절대 경로 <code class=\"language-text\">@app.route('/mpip)</code>처럼 줄 수 있지만, <code class=\"language-text\">myip</code> 외에는 어떻게 처리할까?</p>\n<p>아래 코드처럼 <code class=\"language-text\">&lt;/></code>를 사용하면 설정한 라우팅 경로외에 임의로 넣을 시 메시지를 넣어 리턴 해줄 수 있다!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#@app.route('/&lt;block>')\n#def block(block):\n# return '사용할 수 없는 페이지입니다. 다시 한번확인 바랍니다.'</code></pre></div>\n<h3 id=\"--결과-1\" style=\"position:relative;\"><a href=\"#--%EA%B2%B0%EA%B3%BC-1\" aria-label=\"  결과 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 결과</h3>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/a28464be-a5d3-4c9b-a9e5-6b7a99254ad3/image.png\" alt=\"\"></p>\n<p><code class=\"language-text\">@app.route('api/임의값')</code>를 넣어서 json 형태로 주는 것도 가능하다!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@app.route('/api/&lt;option>') #get echo api\ndef get_echo_call(option):\n    return jsonify({\"option\": option})</code></pre></div>\n<h3 id=\"--결과-2\" style=\"position:relative;\"><a href=\"#--%EA%B2%B0%EA%B3%BC-2\" aria-label=\"  결과 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 결과</h3>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/d2ef9ce2-2ad3-450a-b7c0-ce3f5a0c4d67/image.png\" alt=\"\"></p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#01-my-ip-api-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EA%B8%B0\">01. My IP API 구현해보기</a></p>\n<ul>\n<li><a href=\"#--%EC%98%88%EC%A0%9C-code\">- 예제 Code</a></li>\n<li><a href=\"#--%EA%B2%B0%EA%B3%BC\">- 결과</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#02-route-%EC%98%B5%EC%85%98\">02. route 옵션</a></p>\n<ul>\n<li><a href=\"#--%EA%B2%B0%EA%B3%BC-1\">- 결과</a></li>\n<li><a href=\"#--%EA%B2%B0%EA%B3%BC-2\">- 결과</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"01. My IP API 구현해보기 01. Flask를 활용한 Rest API[GET] 구현해보기_01편 전 편에서 우리는 를 실행해봤다.\n지금까지는 그냥 Web 이랑 뭐가다르지? 싶을 수 있다. - 예제 Code HelloWorld는 Root으로 두고 를 만들어보자 - 결과  02. route 옵션  옵션에 절대 경로 처럼 줄 수 있지만,  외에는 어떻게 처리할까? 아래 코드처럼 를 사용하면 설정한 라우팅 경로외에 임의로 넣을 시 메시지를 넣어 리턴 해줄 수 있다! - 결과  를 넣어서 json 형태로 주는 것도 가능하다! - 결과  01. My IP API 구현해보기 - 예제 Code - 결과 02. route 옵션 - 결과 - 결과","frontmatter":{"date":"August 25, 2023","title":"02. Flask를 활용한 Rest API[GET] 구현해보기_02편","categories":"Tech","author":"정욱현","emoji":"😀"},"fields":{"slug":"/tech/restapi_02/"}},"next":{"id":"0fd46287-5fa6-5462-bf83-12a8bfd7e2e3","html":"<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/93656a34-0e4e-45a9-ba54-90baee70b736/image.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"01-flask란\" style=\"position:relative;\"><a href=\"#01-flask%EB%9E%80\" aria-label=\"01 flask란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. Flask란?</h2>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/f9af1c89-d82c-43d8-9069-0122e99c6a48/image.png\" alt=\"\"></p>\n<p>Flask는 Python를 기반하고 있는 <code class=\"language-text\">Micro Web Framework</code> 다.\n정말 간단한 코드로 쉽게 Web 또는 API Server 구성할 수 있다.</p>\n<hr>\n<h2 id=\"02-또-helloworld-구현하기\" style=\"position:relative;\"><a href=\"#02-%EB%98%90-helloworld-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"02 또 helloworld 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. <del>(또)</del> HelloWorld 구현하기</h2>\n<h3 id=\"--flask-라이브러리-설치\" style=\"position:relative;\"><a href=\"#--flask-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98\" aria-label=\"  flask 라이브러리 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Flask 라이브러리 설치</h3>\n<p>우선 <code class=\"language-text\">Flask</code> 라이브러리를 설치해야한다.\n아래 명령어로 설치해보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ pip install flask\n$ pip install flask-restx</code></pre></div>\n<h3 id=\"--code-작성하기\" style=\"position:relative;\"><a href=\"#--code-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"  code 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Code 작성하기</h3>\n<p>원하는 디렉토리 안에 <code class=\"language-text\">app.py</code> 파일을 생성하여 아래 코드를 넣고 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">from flask import Flask\n\napp = Flask (__name__)\n\n@app.route('/')\ndef helloworld():\n\treturn 'Hello World!'\n\nif __name__==\"__main__\":\n\tapp.run()</code></pre></div>\n<h3 id=\"--실행하기\" style=\"position:relative;\"><a href=\"#--%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"  실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 실행하기</h3>\n<p>만든 <code class=\"language-text\">app.py</code>파일을 python으로 실행하면 아래와 같이 메시지가 발생한다.</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/a2261830-9c7b-4065-a3f7-bcc5ed658b65/image.png\" alt=\"\"></p>\n<h3 id=\"--접근하기\" style=\"position:relative;\"><a href=\"#--%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0\" aria-label=\"  접근하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 접근하기</h3>\n<p>테스트 접근은 <code class=\"language-text\">http://127.0.01:5000</code>을 통해 접근하게 되면 <code class=\"language-text\">HelloWorld!</code> 보여지게 된다.</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/99bd681f-7e51-44b3-a167-caf03d1a23e1/image.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"03-code-뿌셔보기\" style=\"position:relative;\"><a href=\"#03-code-%EB%BF%8C%EC%85%94%EB%B3%B4%EA%B8%B0\" aria-label=\"03 code 뿌셔보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. Code 뿌셔보기</h2>\n<p>우리가 예제코드를 가지고 위에서 <code class=\"language-text\">Hello World!</code>까지 구현해봤다.</p>\n<h3 id=\"--approute\" style=\"position:relative;\"><a href=\"#--approute\" aria-label=\"  approute permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- @app.route(’/‘)</h3>\n<p>우리가 작성하면서 <code class=\"language-text\">@app.route('/')</code> 코드를 넣었는데 이 코드가 <code class=\"language-text\">Route 경로</code>를 뜻하는 것이다.</p>\n<p>접근할때 <code class=\"language-text\">http://127.0.01:5000</code> 주소로 접근했지만 <code class=\"language-text\">http://127.0.01:5000/api</code> 에 접근하려면 코드는 아래과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">from flask import Flask\n\napp = Flask (__name__)\n\n@app.route('/api')\ndef helloworld():\n\treturn 'Hello World!'\n\nif __name__==\"__main__\":\n\tapp.run()</code></pre></div>\n<h3 id=\"--결과\" style=\"position:relative;\"><a href=\"#--%EA%B2%B0%EA%B3%BC\" aria-label=\"  결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 결과</h3>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/24e3af2e-c6c4-4879-b809-d1baff0fba43/image.png\" alt=\"\"></p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#01-flask%EB%9E%80\">01. Flask란?</a></p>\n</li>\n<li>\n<p><a href=\"#02-%EB%98%90-helloworld-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\">02. <del>(또)</del> HelloWorld 구현하기</a></p>\n<ul>\n<li><a href=\"#--flask-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98\">- Flask 라이브러리 설치</a></li>\n<li><a href=\"#--code-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\">- Code 작성하기</a></li>\n<li><a href=\"#--%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\">- 실행하기</a></li>\n<li><a href=\"#--%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0\">- 접근하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#03-code-%EB%BF%8C%EC%85%94%EB%B3%B4%EA%B8%B0\">03. Code 뿌셔보기</a></p>\n<ul>\n<li><a href=\"#--approute\">- @app.route(’/‘)</a></li>\n<li><a href=\"#--%EA%B2%B0%EA%B3%BC\">- 결과</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 25, 2023","title":"01. Flask를 활용한 Rest API[GET] 구현해보기_01편","categories":"Tech","author":"정욱현","emoji":"😀"},"fields":{"slug":"/tech/restapi_01/"}},"prev":{"id":"1cf04fc8-3b70-5978-a9bc-e552e932798c","html":"<h2 id=\"구성-전에\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%84%B1-%EC%A0%84%EC%97%90\" aria-label=\"구성 전에 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구성 전에..</h2>\n<p>Terraform를 사용하기전에 개발환경부터 구축해야한다.\n보통 로컬PC에 구성해서 사용하지만, 본인은 <code class=\"language-text\">AWS Cloud9</code>를 활용해서 개발서버(?)를 구성했다.\n<code class=\"language-text\">Access key</code>, <code class=\"language-text\">Secret key</code>의 유출 방지 및 코드 저장용으로 사용하고 있다!</p>\n<p>Cloud9도 EC2이기 때문에 Role부여해서 key를 하드코딩하지 않고 사용 할 수 있다!</p>\n<p>앞으로는 <code class=\"language-text\">AWS Cloud9</code> 기준으로 작성하려고 한다!</p>\n<blockquote>\n<p>AWS Cloud9란?\nAWS 서비스로 제공되는 Web IDE이다. 기본적으로 AWS CLI, Python, Node.js 등의 개발언어가 기본제공(?)된다.</p>\n<p>AWS Cloud9 소개 : <a href=\"https://aws.amazon.com/ko/cloud9/\">https://aws.amazon.com/ko/cloud9/</a></p>\n</blockquote>\n<hr>\n<h2 id=\"2-0-aws-cloud9-구축\" style=\"position:relative;\"><a href=\"#2-0-aws-cloud9-%EA%B5%AC%EC%B6%95\" aria-label=\"2 0 aws cloud9 구축 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-0. AWS Cloud9 구축</h2>\n<h3 id=\"2-1-aws-cloud9-구축하기\" style=\"position:relative;\"><a href=\"#2-1-aws-cloud9-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\" aria-label=\"2 1 aws cloud9 구축하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-1. AWS Cloud9 구축하기</h3>\n<p>AWS Console에 Login 후에 <code class=\"language-text\">Cloud9</code> 검색하고 서비스에 들어간다.</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/2c6036cb-4814-4f77-8215-c020c5200069/image.png\" alt=\"\"></p>\n<p><code class=\"language-text\">cloud9</code> 서비스에 접근하면 오른쪽 <code class=\"language-text\">Create environment</code> 클릭하자</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/8b2a9bba-928d-49d5-aebb-3ecf1ee44ba1/image.png\" alt=\"\"></p>\n<p>환경의 이름과 설명을 넣어주는데 내가 원하는대로 넣어준 후 <code class=\"language-text\">Naxt step</code></p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/11ce9d1b-b465-4f7d-8917-73adb73ade52/image.png\" alt=\"\"></p>\n<p>다음으로 넘어가게 된다면 <code class=\"language-text\">configure settings</code>가 나오는데 아래와 같이 셋팅하고 <code class=\"language-text\">Next step</code> 넘어가서 생성하자.</p>\n<p>-> 요약 : EC2 인스턴스 만들고 t2.micro 사이즈, Amazon Linux 2 OS를 사용하고 30분 동안 동작이 없다면 인스턴스를 <code class=\"language-text\">stop</code>한다.</p>\n<p><strong>단, 여기서 중요한 부분 <code class=\"language-text\">Network settings (advanced)</code>부분이다. 당연히 EC2 인스턴스가 생성되니 VPC 안에 만들어야한다.\n이전에 VPC만든적이 없다면 <code class=\"language-text\">Deault VPC</code>에 생성하자.</strong></p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/d88b309f-9a76-4ae5-9646-32f694226a83/image.png\" alt=\"\"></p>\n<p>그러면 자동으로 Cloud9 IDE 리다이렉트로 전환이 되고 디렉토리 및 bash shell 화면도 보이게된다!\n이렇게 되면 Cloud9 구축은 완료되었다!</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/3589699a-64c7-4fa4-ba31-e90dd75e891c/image.png\" alt=\"\"></p>\n<hr>\n<h3 id=\"2-2-terraform\" style=\"position:relative;\"><a href=\"#2-2-terraform\" aria-label=\"2 2 terraform permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-2. Terraform</h3>\n<p>자 이렇게 개발서버를 생성했는데 Terraform 셋팅을 해야죠?\n우린 설치한적이 없지만, Cloud9에서는 Terraform 제공하고 있어서 별도 설치가 필요없습니다!! <del>(갸꿀)</del></p>\n<p>Shell에서 <code class=\"language-text\">terraform -version</code> 실행해봅시다!</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/7f432f7a-e0d0-42e0-9ef9-a0aacf12b429/image.png\" alt=\"\"></p>\n<p>셋팅 끝~~~~~~!</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EA%B5%AC%EC%84%B1-%EC%A0%84%EC%97%90\">구성 전에..</a></p>\n</li>\n<li>\n<p><a href=\"#2-0-aws-cloud9-%EA%B5%AC%EC%B6%95\">2-0. AWS Cloud9 구축</a></p>\n<ul>\n<li><a href=\"#2-1-aws-cloud9-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\">2-1. AWS Cloud9 구축하기</a></li>\n<li><a href=\"#2-2-terraform\">2-2. Terraform</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 25, 2023","title":"02. Terraform - 개발환경 구축하기","categories":"terraform","author":"정욱현","emoji":"😀"},"fields":{"slug":"/terraform/index_03/"}},"site":{"siteMetadata":{"siteUrl":"https://loafer-wock.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/tech/restapi_02/","nextSlug":"/tech/restapi_01/","prevSlug":"/terraform/index_03/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}