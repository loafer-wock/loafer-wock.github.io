{"componentChunkName":"component---src-templates-blog-template-js","path":"/terraform/index_01/","result":{"data":{"cur":{"id":"b9e488eb-8824-5b01-8132-70f80a75d645","html":"<h2 id=\"테라폼이-먼데이\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%B4-%EB%A8%BC%EB%8D%B0%EC%9D%B4\" aria-label=\"테라폼이 먼데이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테라폼이 먼데이</h2>\n<h3 id=\"테라폼을-만났을때\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%84-%EB%A7%8C%EB%82%AC%EC%9D%84%EB%95%8C\" aria-label=\"테라폼을 만났을때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테라폼을 만났을때</h3>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/2882317b-5e80-47cf-8e9e-d984da1194f9/image.gif\" alt=\"\"></p>\n<p>내가 AWS SA 포지션으로 입사한지 얼마 안되었을때 Terraform를 알게 되었다.\n코드로 인프라를 관리한다고 하더라..</p>\n<p>근데 본인은 코드(Code)와 친한 편이 아니라 간편하게 UI에서 “클릭”으로 만드는게 더 쉬웠고,\n사실 AWS UI,CLI 등 일단 있는거 부터 잘 다뤄야 코드로 표현해서 구축 하는게 맞다고 봤다..\n<del>(사실 어려워서 배우기 힘들었던건 비밀..)</del></p>\n<h3 id=\"정의\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%9D%98\" aria-label=\"정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정의</h3>\n<p>테라폼이란 IaC(Infrastructure as Code)로 코드로 인프라를 관리하고 프로비저닝한다고 한다.\nAWS뿐만이 아니라 GCP,Azure,Kubenetes 등 여러 인프라를 코드로 구축 할 수 있다.</p>\n<p>우리가 EC2를 만들기 위해 VPC, Subnet, IGW, NAT Gateway, Security Groups 등등 클릭하면서 설정해야하는 방면 Terraform에서는 간단한 코드로 배포 할 수 있다.</p>\n<p>예제코드 (VPC 생성)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">resource <span class=\"token string\">\"aws_vpc\"</span> <span class=\"token string\">\"vpc\"</span> <span class=\"token punctuation\">{</span>\n\tcidr_block <span class=\"token operator\">=</span> <span class=\"token string\">\"10.0.0.0/16\"</span>\n\tenable_dns_hostnames <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n\ttags <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    \tName <span class=\"token operator\">=</span> vpc\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Terraform Code로 배포 “만” 하고 끝나는 것이 아닌 똑같은 코드로 재활용 및 운영이 가능하다.\n만약 SA가 다른 프로젝트로 투입하게 된다면 기본적인 구조의 코드를 들고 다닌다면 언제든지 코드 재활용해서 쉽게 배포 할 수 있는 장점이 있다.</p>\n<h3 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목표</h3>\n<p>Terraform Code로 AWS를 간단하게 구축 할 수 있는 가이드 문서를 만드려고 한다.</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/8af64f68-6466-4b60-987c-f1c98c0a3b4e/image.gif\" alt=\"\">\n<del>아무튼.. 만들고 동작하니까 괜찮지 않을까..?</del></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%B4-%EB%A8%BC%EB%8D%B0%EC%9D%B4\">테라폼이 먼데이</a></p>\n<ul>\n<li><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%84-%EB%A7%8C%EB%82%AC%EC%9D%84%EB%95%8C\">테라폼을 만났을때</a></li>\n<li><a href=\"#%EC%A0%95%EC%9D%98\">정의</a></li>\n<li><a href=\"#%EB%AA%A9%ED%91%9C\">목표</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"테라폼이 먼데이 테라폼을 만났을때  내가 AWS SA 포지션으로 입사한지 얼마 안되었을때 Terraform를 알게 되었다.\n코드로 인프라를 관리한다고 하더라.. 근데 본인은 코드(Code)와 친한 편이 아니라 간편하게 UI에서 “클릭”으로 만드는게 더 쉬웠고,\n사실 AWS UI,CLI 등 일단 있는거 부터 잘 다뤄야 코드로 표현해서 구축 하는게 맞다고 봤다..\n(사실 어려워서 배우기 힘들었던건 비밀..) 정의 테라폼이란 IaC(Infrastructure as Code)로 코드로 인프라를 관리하고 프로비저닝한다고 한다.\nAWS뿐만이 아니라 GCP,Azure,Kubenetes 등 여러 인프라를 코드로 구축 할 수 있다. 우리가 EC2를 만들기 위해 VPC, Subnet, IGW, NAT Gateway, Security Groups 등등 클릭하면서 설정해야하는 방면 Terraform에서는 간단한 코드로 배포 할 수 있다. 예제코드 (VPC 생성) Terraform Code로 배포 “만”…","frontmatter":{"date":"August 25, 2023","title":"00. 테라폼(Terraform)이 뭔데?","categories":"terraform","author":"정욱현","emoji":"😀"},"fields":{"slug":"/terraform/index_01/"}},"next":{"id":"a5b9bacc-d7ab-50f7-a0c6-2490a2f8e24a","html":"<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/897fb852-12c0-4907-88df-9f21801f875f/image.png\" alt=\"\"></p>\n<h2 id=\"00-api란\" style=\"position:relative;\"><a href=\"#00-api%EB%9E%80\" aria-label=\"00 api란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>00. API란?</h2>\n<blockquote>\n<p>API는 인터페이스를 통해 다양한 플랫폼과 연결을 해주는 것</p>\n</blockquote>\n<p><del>누군가 API가 뭐야? 라고 물어보면 정말 대답하기 힘든거 같다.\n명확하게 누군가 API의 대해 알려줬으면 좋겠다..</del></p>\n<p>API는 여러가지 API가 있지만 그 중 보편적으로 사용 할 Rest API에 대해 알아보려고 한다.</p>\n<hr>\n<h2 id=\"01-rest-api-representational-state-transfer-api\" style=\"position:relative;\"><a href=\"#01-rest-api-representational-state-transfer-api\" aria-label=\"01 rest api representational state transfer api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. Rest API (Representational State Transfer API)</h2>\n<h3 id=\"--rest-api의-형태\" style=\"position:relative;\"><a href=\"#--rest-api%EC%9D%98-%ED%98%95%ED%83%9C\" aria-label=\"  rest api의 형태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Rest API의 형태</h3>\n<p>Rest API는 4가지의 메소드를 가지고 구축한다.( <code class=\"language-text\">GET</code>, <code class=\"language-text\">POST</code>, <code class=\"language-text\">PUT</code>, <code class=\"language-text\">DELETE</code>)</p>\n<ul>\n<li>GET : Create</li>\n<li>POST : Read</li>\n<li>PUT : Update</li>\n<li>DELETE : Delete</li>\n</ul>\n<h3 id=\"--각-상태에-따른-응답코드\" style=\"position:relative;\"><a href=\"#--%EA%B0%81-%EC%83%81%ED%83%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EC%9D%91%EB%8B%B5%EC%BD%94%EB%93%9C\" aria-label=\"  각 상태에 따른 응답코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 각 상태에 따른 응답코드</h3>\n<ul>\n<li>200 : GET 등의 Client 요청을 정상적으로 수행되었을때 발생하는 코드</li>\n<li>201 : POST 작업 수행 시 정상적으로 생성되었을때 발생하는 코드</li>\n</ul>\n<h2 id=\"02-참고자료\" style=\"position:relative;\"><a href=\"#02-%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"02 참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. 참고자료</h2>\n<p><a href=\"https://aws.amazon.com/ko/what-is/restful-api/\">https://aws.amazon.com/ko/what-is/restful-api/</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#00-api%EB%9E%80\">00. API란?</a></p>\n</li>\n<li>\n<p><a href=\"#01-rest-api-representational-state-transfer-api\">01. Rest API (Representational State Transfer API)</a></p>\n<ul>\n<li><a href=\"#--rest-api%EC%9D%98-%ED%98%95%ED%83%9C\">- Rest API의 형태</a></li>\n<li><a href=\"#--%EA%B0%81-%EC%83%81%ED%83%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EC%9D%91%EB%8B%B5%EC%BD%94%EB%93%9C\">- 각 상태에 따른 응답코드</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#02-%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\">02. 참고자료</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 25, 2023","title":"00. 다들 API라고 하는데 API는 뭘까?","categories":"Tech","author":"정욱현","emoji":"😀"},"fields":{"slug":"/tech/restapi_00/"}},"prev":{"id":"0fd46287-5fa6-5462-bf83-12a8bfd7e2e3","html":"<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/93656a34-0e4e-45a9-ba54-90baee70b736/image.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"01-flask란\" style=\"position:relative;\"><a href=\"#01-flask%EB%9E%80\" aria-label=\"01 flask란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. Flask란?</h2>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/f9af1c89-d82c-43d8-9069-0122e99c6a48/image.png\" alt=\"\"></p>\n<p>Flask는 Python를 기반하고 있는 <code class=\"language-text\">Micro Web Framework</code> 다.\n정말 간단한 코드로 쉽게 Web 또는 API Server 구성할 수 있다.</p>\n<hr>\n<h2 id=\"02-또-helloworld-구현하기\" style=\"position:relative;\"><a href=\"#02-%EB%98%90-helloworld-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"02 또 helloworld 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. <del>(또)</del> HelloWorld 구현하기</h2>\n<h3 id=\"--flask-라이브러리-설치\" style=\"position:relative;\"><a href=\"#--flask-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98\" aria-label=\"  flask 라이브러리 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Flask 라이브러리 설치</h3>\n<p>우선 <code class=\"language-text\">Flask</code> 라이브러리를 설치해야한다.\n아래 명령어로 설치해보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> flask\n$ pip <span class=\"token function\">install</span> flask-restx\n</code></pre></div>\n<h3 id=\"--code-작성하기\" style=\"position:relative;\"><a href=\"#--code-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"  code 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Code 작성하기</h3>\n<p>원하는 디렉토리 안에 <code class=\"language-text\">app.py</code> 파일을 생성하여 아래 코드를 넣고 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\n\napp <span class=\"token operator\">=</span> Flask <span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">helloworld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span>\n\n<span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n\tapp<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"--실행하기\" style=\"position:relative;\"><a href=\"#--%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"  실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 실행하기</h3>\n<p>만든 <code class=\"language-text\">app.py</code>파일을 python으로 실행하면 아래와 같이 메시지가 발생한다.</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/a2261830-9c7b-4065-a3f7-bcc5ed658b65/image.png\" alt=\"\"></p>\n<h3 id=\"--접근하기\" style=\"position:relative;\"><a href=\"#--%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0\" aria-label=\"  접근하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 접근하기</h3>\n<p>테스트 접근은 <code class=\"language-text\">http://127.0.01:5000</code>을 통해 접근하게 되면 <code class=\"language-text\">HelloWorld!</code> 보여지게 된다.</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/99bd681f-7e51-44b3-a167-caf03d1a23e1/image.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"03-code-뿌셔보기\" style=\"position:relative;\"><a href=\"#03-code-%EB%BF%8C%EC%85%94%EB%B3%B4%EA%B8%B0\" aria-label=\"03 code 뿌셔보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. Code 뿌셔보기</h2>\n<p>우리가 예제코드를 가지고 위에서 <code class=\"language-text\">Hello World!</code>까지 구현해봤다.</p>\n<h3 id=\"--approute\" style=\"position:relative;\"><a href=\"#--approute\" aria-label=\"  approute permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- @app.route(’/‘)</h3>\n<p>우리가 작성하면서 <code class=\"language-text\">@app.route('/')</code> 코드를 넣었는데 이 코드가 <code class=\"language-text\">Route 경로</code>를 뜻하는 것이다.</p>\n<p>접근할때 <code class=\"language-text\">http://127.0.01:5000</code> 주소로 접근했지만 <code class=\"language-text\">http://127.0.01:5000/api</code> 에 접근하려면 코드는 아래과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\n\napp <span class=\"token operator\">=</span> Flask <span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">helloworld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span>\n\n<span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n\tapp<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"--결과\" style=\"position:relative;\"><a href=\"#--%EA%B2%B0%EA%B3%BC\" aria-label=\"  결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 결과</h3>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/24e3af2e-c6c4-4879-b809-d1baff0fba43/image.png\" alt=\"\"></p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#01-flask%EB%9E%80\">01. Flask란?</a></p>\n</li>\n<li>\n<p><a href=\"#02-%EB%98%90-helloworld-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\">02. <del>(또)</del> HelloWorld 구현하기</a></p>\n<ul>\n<li><a href=\"#--flask-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98\">- Flask 라이브러리 설치</a></li>\n<li><a href=\"#--code-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\">- Code 작성하기</a></li>\n<li><a href=\"#--%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\">- 실행하기</a></li>\n<li><a href=\"#--%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0\">- 접근하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#03-code-%EB%BF%8C%EC%85%94%EB%B3%B4%EA%B8%B0\">03. Code 뿌셔보기</a></p>\n<ul>\n<li><a href=\"#--approute\">- @app.route(’/‘)</a></li>\n<li><a href=\"#--%EA%B2%B0%EA%B3%BC\">- 결과</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 25, 2023","title":"01. Flask를 활용한 Rest API[GET] 구현해보기_01편","categories":"Tech","author":"정욱현","emoji":"😀"},"fields":{"slug":"/tech/restapi_01/"}},"site":{"siteMetadata":{"siteUrl":"https://loafer-wock.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/terraform/index_01/","nextSlug":"/tech/restapi_00/","prevSlug":"/tech/restapi_01/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}