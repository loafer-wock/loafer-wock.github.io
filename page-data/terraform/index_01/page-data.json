{"componentChunkName":"component---src-templates-blog-template-js","path":"/terraform/index_01/","result":{"data":{"cur":{"id":"b9e488eb-8824-5b01-8132-70f80a75d645","html":"<h2 id=\"테라폼이-먼데이\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%B4-%EB%A8%BC%EB%8D%B0%EC%9D%B4\" aria-label=\"테라폼이 먼데이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테라폼이 먼데이</h2>\n<h3 id=\"테라폼을-만났을때\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%84-%EB%A7%8C%EB%82%AC%EC%9D%84%EB%95%8C\" aria-label=\"테라폼을 만났을때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테라폼을 만났을때</h3>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/2882317b-5e80-47cf-8e9e-d984da1194f9/image.gif\" alt=\"\"></p>\n<p>내가 AWS SA 포지션으로 입사한지 얼마 안되었을때 Terraform를 알게 되었다.\n코드로 인프라를 관리한다고 하더라..</p>\n<p>근데 본인은 코드(Code)와 친한 편이 아니라 간편하게 UI에서 “클릭”으로 만드는게 더 쉬웠고,\n사실 AWS UI,CLI 등 일단 있는거 부터 잘 다뤄야 코드로 표현해서 구축 하는게 맞다고 봤다..\n<del>(사실 어려워서 배우기 힘들었던건 비밀..)</del></p>\n<h3 id=\"정의\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%9D%98\" aria-label=\"정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정의</h3>\n<p>테라폼이란 IaC(Infrastructure as Code)로 코드로 인프라를 관리하고 프로비저닝한다고 한다.\nAWS뿐만이 아니라 GCP,Azure,Kubenetes 등 여러 인프라를 코드로 구축 할 수 있다.</p>\n<p>우리가 EC2를 만들기 위해 VPC, Subnet, IGW, NAT Gateway, Security Groups 등등 클릭하면서 설정해야하는 방면 Terraform에서는 간단한 코드로 배포 할 수 있다.</p>\n<p>예제코드 (VPC 생성)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">resource <span class=\"token string\">\"aws_vpc\"</span> <span class=\"token string\">\"vpc\"</span> <span class=\"token punctuation\">{</span>\n\tcidr_block <span class=\"token operator\">=</span> <span class=\"token string\">\"10.0.0.0/16\"</span>\n\tenable_dns_hostnames <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n\ttags <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    \tName <span class=\"token operator\">=</span> vpc\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Terraform Code로 배포 “만” 하고 끝나는 것이 아닌 똑같은 코드로 재활용 및 운영이 가능하다.\n만약 SA가 다른 프로젝트로 투입하게 된다면 기본적인 구조의 코드를 들고 다닌다면 언제든지 코드 재활용해서 쉽게 배포 할 수 있는 장점이 있다.</p>\n<h3 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목표</h3>\n<p>Terraform Code로 AWS를 간단하게 구축 할 수 있는 가이드 문서를 만드려고 한다.</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/8af64f68-6466-4b60-987c-f1c98c0a3b4e/image.gif\" alt=\"\">\n<del>아무튼.. 만들고 동작하니까 괜찮지 않을까..?</del></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%B4-%EB%A8%BC%EB%8D%B0%EC%9D%B4\">테라폼이 먼데이</a></p>\n<ul>\n<li><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%84-%EB%A7%8C%EB%82%AC%EC%9D%84%EB%95%8C\">테라폼을 만났을때</a></li>\n<li><a href=\"#%EC%A0%95%EC%9D%98\">정의</a></li>\n<li><a href=\"#%EB%AA%A9%ED%91%9C\">목표</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"테라폼이 먼데이 테라폼을 만났을때  내가 AWS SA 포지션으로 입사한지 얼마 안되었을때 Terraform를 알게 되었다.\n코드로 인프라를 관리한다고 하더라.. 근데 본인은 코드(Code)와 친한 편이 아니라 간편하게 UI에서 “클릭”으로 만드는게 더 쉬웠고,\n사실 AWS UI,CLI 등 일단 있는거 부터 잘 다뤄야 코드로 표현해서 구축 하는게 맞다고 봤다..\n(사실 어려워서 배우기 힘들었던건 비밀..) 정의 테라폼이란 IaC(Infrastructure as Code)로 코드로 인프라를 관리하고 프로비저닝한다고 한다.\nAWS뿐만이 아니라 GCP,Azure,Kubenetes 등 여러 인프라를 코드로 구축 할 수 있다. 우리가 EC2를 만들기 위해 VPC, Subnet, IGW, NAT Gateway, Security Groups 등등 클릭하면서 설정해야하는 방면 Terraform에서는 간단한 코드로 배포 할 수 있다. 예제코드 (VPC 생성) Terraform Code로 배포 “만”…","frontmatter":{"date":"August 25, 2023","title":"00. 테라폼(Terraform)이 뭔데?","categories":"terraform","author":"정욱현","emoji":"😀"},"fields":{"slug":"/terraform/index_01/"}},"next":null,"prev":{"id":"1cf04fc8-3b70-5978-a9bc-e552e932798c","html":"<h2 id=\"구성-전에\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%84%B1-%EC%A0%84%EC%97%90\" aria-label=\"구성 전에 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구성 전에..</h2>\n<p>Terraform를 사용하기전에 개발환경부터 구축해야한다.\n보통 로컬PC에 구성해서 사용하지만, 본인은 <code class=\"language-text\">AWS Cloud9</code>를 활용해서 개발서버(?)를 구성했다.\n<code class=\"language-text\">Access key</code>, <code class=\"language-text\">Secret key</code>의 유출 방지 및 코드 저장용으로 사용하고 있다!</p>\n<p>Cloud9도 EC2이기 때문에 Role부여해서 key를 하드코딩하지 않고 사용 할 수 있다!</p>\n<p>앞으로는 <code class=\"language-text\">AWS Cloud9</code> 기준으로 작성하려고 한다!</p>\n<blockquote>\n<p>AWS Cloud9란?\nAWS 서비스로 제공되는 Web IDE이다. 기본적으로 AWS CLI, Python, Node.js 등의 개발언어가 기본제공(?)된다.</p>\n<p>AWS Cloud9 소개 : <a href=\"https://aws.amazon.com/ko/cloud9/\">https://aws.amazon.com/ko/cloud9/</a></p>\n</blockquote>\n<hr>\n<h2 id=\"2-0-aws-cloud9-구축\" style=\"position:relative;\"><a href=\"#2-0-aws-cloud9-%EA%B5%AC%EC%B6%95\" aria-label=\"2 0 aws cloud9 구축 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-0. AWS Cloud9 구축</h2>\n<h3 id=\"2-1-aws-cloud9-구축하기\" style=\"position:relative;\"><a href=\"#2-1-aws-cloud9-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\" aria-label=\"2 1 aws cloud9 구축하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-1. AWS Cloud9 구축하기</h3>\n<p>AWS Console에 Login 후에 <code class=\"language-text\">Cloud9</code> 검색하고 서비스에 들어간다.</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/2c6036cb-4814-4f77-8215-c020c5200069/image.png\" alt=\"\"></p>\n<p><code class=\"language-text\">cloud9</code> 서비스에 접근하면 오른쪽 <code class=\"language-text\">Create environment</code> 클릭하자</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/8b2a9bba-928d-49d5-aebb-3ecf1ee44ba1/image.png\" alt=\"\"></p>\n<p>환경의 이름과 설명을 넣어주는데 내가 원하는대로 넣어준 후 <code class=\"language-text\">Naxt step</code></p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/11ce9d1b-b465-4f7d-8917-73adb73ade52/image.png\" alt=\"\"></p>\n<p>다음으로 넘어가게 된다면 <code class=\"language-text\">configure settings</code>가 나오는데 아래와 같이 셋팅하고 <code class=\"language-text\">Next step</code> 넘어가서 생성하자.</p>\n<p>-> 요약 : EC2 인스턴스 만들고 t2.micro 사이즈, Amazon Linux 2 OS를 사용하고 30분 동안 동작이 없다면 인스턴스를 <code class=\"language-text\">stop</code>한다.</p>\n<p><strong>단, 여기서 중요한 부분 <code class=\"language-text\">Network settings (advanced)</code>부분이다. 당연히 EC2 인스턴스가 생성되니 VPC 안에 만들어야한다.\n이전에 VPC만든적이 없다면 <code class=\"language-text\">Deault VPC</code>에 생성하자.</strong></p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/d88b309f-9a76-4ae5-9646-32f694226a83/image.png\" alt=\"\"></p>\n<p>그러면 자동으로 Cloud9 IDE 리다이렉트로 전환이 되고 디렉토리 및 bash shell 화면도 보이게된다!\n이렇게 되면 Cloud9 구축은 완료되었다!</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/3589699a-64c7-4fa4-ba31-e90dd75e891c/image.png\" alt=\"\"></p>\n<hr>\n<h3 id=\"2-2-terraform\" style=\"position:relative;\"><a href=\"#2-2-terraform\" aria-label=\"2 2 terraform permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-2. Terraform</h3>\n<p>자 이렇게 개발서버를 생성했는데 Terraform 셋팅을 해야죠?\n우린 설치한적이 없지만, Cloud9에서는 Terraform 제공하고 있어서 별도 설치가 필요없습니다!! <del>(갸꿀)</del></p>\n<p>Shell에서 <code class=\"language-text\">terraform -version</code> 실행해봅시다!</p>\n<p><img src=\"https://velog.velcdn.com/images/jtret2424/post/7f432f7a-e0d0-42e0-9ef9-a0aacf12b429/image.png\" alt=\"\"></p>\n<p>셋팅 끝~~~~~~!</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EA%B5%AC%EC%84%B1-%EC%A0%84%EC%97%90\">구성 전에..</a></p>\n</li>\n<li>\n<p><a href=\"#2-0-aws-cloud9-%EA%B5%AC%EC%B6%95\">2-0. AWS Cloud9 구축</a></p>\n<ul>\n<li><a href=\"#2-1-aws-cloud9-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\">2-1. AWS Cloud9 구축하기</a></li>\n<li><a href=\"#2-2-terraform\">2-2. Terraform</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 25, 2023","title":"02. Terraform - 개발환경 구축하기","categories":"terraform","author":"정욱현","emoji":"😀"},"fields":{"slug":"/terraform/index_03/"}},"site":{"siteMetadata":{"siteUrl":"https://loafer-wock.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/terraform/index_01/","nextSlug":"","prevSlug":"/terraform/index_03/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}